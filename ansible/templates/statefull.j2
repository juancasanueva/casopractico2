apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ aplicacion.nombre }}"
  namespace: "{{ k8s_namespace }}"
  labels:
    name: "{{ aplicacion.nombre }}"
spec:
  replicas: {{ aplicacion.replicas }}
  selector:
    matchLabels:
      app: "{{ aplicacion.nombre }}"
  template:
    metadata:
      labels:
        app: "{{ aplicacion.nombre }}"
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: "{{ aplicacion.nombre }}"
        image: "{{ aplicacion.imagen }}"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "{{ aplicacion.root_user }}"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "{{ aplicacion.root_password }}"
        resources:
          requests:
            cpu: "{{ aplicacion.recursos.cpu }}"
            memory: "{{ aplicacion.recursos.memoria }}"
          limits:
            cpu: "{{ aplicacion.limites.cpu }}"
            memory: "{{ aplicacion.limites.memoria }}"
        ports:
        - containerPort: {{ aplicacion.puerto }}
          name: "{{ aplicacion.nombre }}"
        volumeMounts:
          - name: volume
            mountPath: "{{ aplicacion.mount_path }}"
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: azure-managed-disk
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ aplicacion.nombre }}"
  namespace: "{{ k8s_namespace }}"
spec:
  type: LoadBalancer
  ports:
    - port: {{ aplicacion.puerto }}
      targetPort: {{ aplicacion.puerto }}
  selector:
    app: "{{ aplicacion.nombre }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azure-managed-disk
  namespace: "{{ k8s_namespace }}"
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ aplicacion.storage }}"